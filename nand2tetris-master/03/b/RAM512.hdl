// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16-bit wide.
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM512[address(t)](t)
 *     Write: If load(t-1) then RAM512[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory
 * location specified by address. If load == 1, the in value is loaded
 * into the memory location specified by address.  This value becomes
 * available through the out output starting from the next time step.
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[6..8], a=l1, b=l2, c=l3, d=l4, e=l5, f=l6, g=l7, h=l8);
    RAM64(in=in, load=l1, address=address[0..5], out=t1);
    RAM64(in=in, load=l2, address=address[0..5], out=t2);
    RAM64(in=in, load=l3, address=address[0..5], out=t3);
    RAM64(in=in, load=l4, address=address[0..5], out=t4);
    RAM64(in=in, load=l5, address=address[0..5], out=t5);
    RAM64(in=in, load=l6, address=address[0..5], out=t6);
    RAM64(in=in, load=l7, address=address[0..5], out=t7);
    RAM64(in=in, load=l8, address=address[0..5], out=t8);
    Mux8Way16(a=t1, b=t2, c=t3, d=t4, e=t5, f=t6, g=t7, h=t8, sel=address[6..8], out=out);
}
